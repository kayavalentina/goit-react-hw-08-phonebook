{"version":3,"file":"static/js/980.29d377f3.chunk.js","mappings":"2RAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yNAYzBC,EAAQJ,EAAAA,EAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8GAQpBG,GAAQN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0JAUrBM,EAAST,EAAAA,EAAAA,OAAaU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,0nBA+BtBQ,GAAcX,EAAAA,EAAAA,GAAOY,EAAAA,GAAPZ,CAAoBa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oE,UClDzCW,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEI,EAAoBF,EAAA,GAAEG,EAAuBH,EAAA,GAUpD,OACEI,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAef,EACfgB,SAXyB,SAACC,EAAQC,GACpCN,GAAwB,GACxBP,GAASc,EAAAA,EAAAA,IAASF,IAASG,MAAK,WAC9BR,GAAwB,EAC1B,IACAM,EAAOG,WACT,EAKmCC,UAE/BC,EAAAA,EAAAA,MAACtC,EAAU,CAAAqC,SAAA,EACTC,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,CAAC,YAELT,EAAAA,EAAAA,KAACrB,EAAK,CAACgC,KAAK,OAAOvB,KAAK,UACxBY,EAAAA,EAAAA,KAAChB,EAAW,CAACI,KAAK,OAAOwB,UAAU,YAErCF,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,CAAC,SAELT,EAAAA,EAAAA,KAACrB,EAAK,CAACgC,KAAK,QAAQvB,KAAK,WACzBY,EAAAA,EAAAA,KAAChB,EAAW,CAACI,KAAK,QAAQwB,UAAU,YAEtCF,EAAAA,EAAAA,MAACjC,EAAK,CAAAgC,SAAA,CAAC,YAELT,EAAAA,EAAAA,KAACrB,EAAK,CAACgC,KAAK,WAAWvB,KAAK,cAC5BY,EAAAA,EAAAA,KAAChB,EAAW,CAACI,KAAK,WAAWwB,UAAU,YAEzCF,EAAAA,EAAAA,MAAC5B,EAAM,CAAC6B,KAAK,SAASE,SAAUf,EAAqBW,SAAA,CAClDX,IAAwBE,EAAAA,EAAAA,KAACc,EAAAA,EAAM,IAAI,kBAM9C,E,UCzDe,SAASC,IACtB,OACEL,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAP,SAAA,EACET,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAAAR,UACLT,EAAAA,EAAAA,KAAA,SAAAS,SAAO,oBAETT,EAAAA,EAAAA,KAACT,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin-bottom: 30px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  align-items: center;\n  padding: 20px;\n  /* border: 2px black solid; */\n  border-radius: 5px;\n  min-width: 350px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  row-gap: 2px;\n  color: white;\n  max-width: 300px;\n`;\n\nexport const Input = styled(Field)`\n  min-width: 300px;\n  min-height: 26px;\n  padding: 1px 5px;\n  font-size: 16px;\n  outline: none;\n  border-radius: 5px;\n  border-width: 0;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  font-family: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  column-gap: 5px;\n\n  min-width: 140px;\n  min-height: 30px;\n  margin: 0;\n\n  background-color: white;\n  border: 2px black solid;\n  border-radius: 5px;\n  cursor: pointer;\n\n  font-size: 16px;\n  font-family: inherit;\n\n  transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    border-color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    color: white;\n    background-color: black;\n    border-color: white;\n  }\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  font-size: 14px;\n  color: black;\n  max-width: 300px;\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from 'components/Loader';\nimport {\n  Button,\n  Input,\n  Label,\n  StyledForm,\n  StyledError,\n} from './RegisterForm.styled';\n\nconst defaultValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [determineRegisterBtn, setDetermineRegisterBtn] = useState(false);\n\n  const handleRegisterSubmit = (values, action) => {\n    setDetermineRegisterBtn(true);\n    dispatch(register(values)).then(() => {\n      setDetermineRegisterBtn(false);\n    });\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={defaultValues}\n      onSubmit={handleRegisterSubmit}\n    >\n      <StyledForm>\n        <Label>\n          Username\n          <Input type=\"text\" name=\"name\" />\n          <StyledError name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Email\n          <Input type=\"email\" name=\"email\" />\n          <StyledError name=\"email\" component=\"div\" />\n        </Label>\n        <Label>\n          Password\n          <Input type=\"password\" name=\"password\" />\n          <StyledError name=\"password\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\" disabled={determineRegisterBtn}>\n          {determineRegisterBtn && <Loader />}\n          Register\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","Field","_templateObject3","Button","_templateObject4","StyledError","ErrorMessage","_templateObject5","defaultValues","name","email","password","RegisterForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","determineRegisterBtn","setDetermineRegisterBtn","_jsx","Formik","initialValues","onSubmit","values","action","register","then","resetForm","children","_jsxs","type","component","disabled","Loader","Register","_Fragment","Helmet"],"sourceRoot":""}
{"version":3,"file":"static/js/422.d3eeaa1f.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #b1a0db;\n  padding: 20px;\n  border-radius: 10px;\n`;\n\nexport const Label = styled.label`\n  font-size: 12px;\n  color: black;\n`;\n\nexport const Input = styled(Field)`\n  width: 90%;\n  padding: 10px;\n  margin: 5px 0;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n\nexport const ErrorMessageContainer = styled.div`\n  color: #ff0000;\n  font-size: 10px;\n`;\n\nexport const SubmitButton = styled.button`\n  margin-left: 75px;\n  margin-top: 10px;\n  background-color: #545557;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport { addContact } from '../../redux/contacts/operations';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport { Loader } from 'components/Loader';\n\nimport {\n  FormContainer,\n  Label,\n  Input,\n  ErrorMessageContainer,\n  SubmitButton,\n} from './ContactForm.styled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name should be at least 2 characters long')\n    .max(30, 'Name should not exceed 30 characters')\n    .required('Name is required'),\n  number: Yup.string()\n    .matches(/^\\d+$/, 'Phone number should contain only digits')\n    .min(7, 'Phone number should have at least 7 digits')\n    .max(15, 'Phone number should not exceed 15 digits')\n    .required('Phone number is required'),\n});\nconst defaultValues = {\n  name: '',\n  number: '',\n};\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const [determineAddBtn, setDetermineAddBtn] = useState(false);\n\n  const handleSubmitForm = (values, action) => {\n    setDetermineAddBtn(true);\n    const isInContacts = contacts.some(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (isInContacts) {\n      return Notiflix.Notify.failure(`${values.name} is already in contacts!`);\n    }\n    dispatch(addContact(values)).then(() => {\n      setDetermineAddBtn(false);\n    });\n    action.resetForm();\n  };\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={defaultValues}\n        onSubmit={handleSubmitForm}\n        validationSchema={schema}\n      >\n        <Form>\n          <div>\n            <Label htmlFor=\"name\">Name</Label>\n            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" />\n            <ErrorMessage name=\"name\" component={ErrorMessageContainer} />\n          </div>\n          <div>\n            <Label htmlFor=\"number\">Phone Number</Label>\n            <Input\n              type=\"text\"\n              name=\"number\"\n              id=\"number\"\n              placeholder=\"Phone Number\"\n            />\n            <ErrorMessage name=\"number\" component={ErrorMessageContainer} />\n          </div>\n          <SubmitButton type=\"submit\" disabled={isLoading && determineAddBtn}>\n            {isLoading && determineAddBtn && <Loader />}\n            Add Contact\n          </SubmitButton>\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  width: 330px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n  gap: 10px;\n`;\n\nexport const ContactInfo = styled.div`\n  flex: 1;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin: 0;\n`;\n\nexport const PhoneNumber = styled.p`\n  font-size: 14px;\n  color: #555;\n  margin: 0;\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: #e8817a;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  padding: 5px 10px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #d32f2f;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  List,\n  ListItem,\n  ContactInfo,\n  Name,\n  PhoneNumber,\n  DeleteButton,\n} from './ContactList.styled';\n\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\n\nimport { Loader } from 'components/Loader';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [contactToDeleteId, setContactToDeleteId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (!visibleContacts?.length && !error & !isLoading) {\n    return <div>No contacts added yet.</div>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ContactInfo>\n            <Name>{name}</Name>\n            <PhoneNumber>{number}</PhoneNumber>\n          </ContactInfo>\n          <DeleteButton\n            onClick={() => {\n              setContactToDeleteId(id);\n              dispatch(deleteContact(id)).then(() => {\n                setContactToDeleteId(null);\n              });\n            }}\n            disabled={isLoading && contactToDeleteId === id}\n          >\n            {contactToDeleteId === id && <Loader />}\n            Delete\n          </DeleteButton>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 330px;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n`;\n","import { selectFilter } from '../../redux/filter/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Input\n      type=\"text\"\n      placeholder=\"Search contacts\"\n      value={filter}\n      onChange={e => dispatch(setFilter(e.target.value.trim()))}\n    />\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 600px;\n  margin: 0 auto;\n`;\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  align-items: center;\n  padding: 20px;\n  border: 2px black solid;\n  border-radius: 5px;\n  min-width: 350px;\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n\n  font-size: 32px;\n  text-align: center;\n  color: white;\n`;\n\nexport const ContactsTitle = styled.p`\n  margin-bottom: 10px;\n\n  font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  color: white;\n`;\n\nexport const FilterTitle = styled.p`\n  margin-bottom: 3px;\n\n  font-size: 18px;\n  text-align: center;\n  color: white;\n`;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Filter } from 'components/Filter';\nimport {\n  ContactsContainer,\n  ContactsTitle,\n  FilterTitle,\n  MainTitle,\n  MainContainer,\n} from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n\n      <MainContainer>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <ContactsContainer>\n          <FilterTitle>Find contacts by name</FilterTitle>\n          <Filter />\n          <ContactList />\n        </ContactsContainer>\n      </MainContainer>\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","selectIsLoading","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","items","contact","name","toLowerCase","includes","FormContainer","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","Field","_templateObject3","ErrorMessageContainer","_templateObject4","SubmitButton","_templateObject5","schema","Yup","shape","min","max","required","number","matches","defaultValues","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","determineAddBtn","setDetermineAddBtn","_jsx","children","Formik","initialValues","onSubmit","values","action","some","_ref","Notiflix","concat","addContact","then","resetForm","validationSchema","_jsxs","Form","htmlFor","type","id","placeholder","ErrorMessage","component","disabled","Loader","List","ListItem","ContactInfo","Name","PhoneNumber","DeleteButton","_templateObject6","ContactList","visibleContacts","contactToDeleteId","setContactToDeleteId","useEffect","fetchContacts","length","map","onClick","deleteContact","Filter","value","onChange","e","setFilter","target","trim","MainContainer","ContactsContainer","MainTitle","ContactsTitle","FilterTitle","Contacts","_Fragment","Helmet"],"sourceRoot":""}